---
quarkus:
  application:
    name: dcis-ui
    version: 2.0.0
    ui-header: ${quarkus.application.name}/${quarkus.application.version}
    api-version: "v1"

  kubernetes-config:
    enabled: true

  log:
    metrics:
      enabled: true
    console:
      enable: true
      json:
        ~: true
        pretty-print: true
        print-details: true
    level: WARN
    min-level: ALL
    category:
      "de.paladinsinn":
        level: INFO
      "de.kaiserpfalzedv":
        level: INFO
      http-problem:
        level: INFO
      "org.atmosphere":
        level: WARN

  logging-manager:
    enable: true
    ui:
      enable: true

  hibernate-orm:
    enabled: false


  http:
    insecure-requests: REDIRECT
    port: 8080
    ssl-port: 8443
    ssl:
      protocols: TLSv1.3
      sni: true
      certificate:
        key-files:
          - /opt/app-root/config/tls/tls.key
        files:
          - /opt/app-root/config/tls/tls.crt

    access-log:
      enabled: true
      log-to-file: false
      #exclude-pattern: "/q/.*"
      pattern: combined

    proxy:
      proxy-address-forwarding: true
      allow-forwarded: false
      enable-forwarded-host: true
      forwarded-host-header: X-ORIGINAL-HOST

    test-port: 9080
    test-ssl-port: 9443
    enable-compression: true
    enable-decompression: true
    record-request-start-time: true

    body:
      delete-uploaded-files-on-end: true
      handle-file-uploads: true
      preallocate-body-buffer: true
      merge-form-attributes: true

    auth:
      proactive: true
      policy:
        metrics:
          roles-allowed: metrics
      permission:
        metrics:
          paths: /q/*
#          policy: metrics
          policy: permit
        sw-js:
          paths: /sw.js
          policy: permit
        protected:
          paths: /*
          policy: authenticated
      basic: false
      form:
        enabled: false
    cors: true

  oidc:
    enabled: true
    application-type: HYBRID
    auth-server-url: ${OIDC_URL}
    client-id: ${OIDC_CLIENT}
    credentials:
      secret: ${OIDC_SECRET}
    roles:
      source: idtoken
    authentication:
      cookie-path: "/"
      cookie-force-secure: true
      cookie-domain: ${OIDC_COOKIE_DOMAIN:delphi-council.org}
      add-openid-scope: true
      scopes:
        - phone
        - email
        - roles
        - profile
        - roles
    logout:
      path: "/logout"
      post-logout-path: "/"
      backchannel:
        path: "/back-channel-logout"
      frontchannel:
        path: "/front-channel-logout"
  keycloak:
    policy-enforcer:
      enable: true
  security:
    users:
      embedded:
        enabled: false

  datasource:
    jdbc: false

  smallrye-health:
    ui:
      enable: true


  micrometer:
    enabled: true
    registry-enabled-default: true
    binder-enabled-default: true
    binder:
      http-server:
        enabled: true
      mp-metrics:
        enabled: true
      jvm: true
      system: true
      vertx:
        enabled: true
    export:
      json:
        enabled: true
        path: /q/json-metrics
      prometheus:
        enabled: true
        path: /q/metrics
        default-registry: true

  container-image:
    name: delphi-council-webui
    tag: ${quarkus.application.version}
  openshift:
    deployment-kind: Deployment

  devservices:
    enabled: false
  banner:
    enabled: true



"%dev":
  quarkus:
    log: &log-dev
      console:
        json: false
        enable: true
        format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
      level: INFO
      min-level: TRACE
      category:
        "de.kaiserpfalzedv":
          level: DEBUG
        "de.paladinsinn":
          level: DEBUG
        http-problem:
          level: INFO

    http: &http-dev
      insecure-requests: REDIRECT
      port: 8080
      ssl-port: 8443
      ssl:
        protocols: TLSv1.3
        sni: true
        certificate:
          key-files:
            - tls/tls.key
          files:
            - tls/tls.crt
      auth:
        basic: false
    oidc: &oidc-dev
      enabled: true
      application-type: HYBRID
      auth-server-url: ${OIDC_URL}
      client-id: ${OIDC_CLIENT}
      credentials:
        secret: ${OIDC_SECRET}
      roles:
        source: idtoken
      authentication:
        cookie-path: "/"
        cookie-force-secure: true
        cookie-domain: "localhost"
        add-openid-scope: true
        scopes:
          - phone
          - email
          - roles
          - profile
          - roles
      logout:
        path: "/logout"
        post-logout-path: "/"
        backchannel:
          path: "/back-channel-logout"
        frontchannel:
          path: "/front-channel-logout"

"%test":
  quarkus:
    log: *log-dev
    http: *http-dev
    oidc: *oidc-dev

vaadin:
  launch-browser: true
  whitelisted-packages:
    - com.vaadin
    - org.vaadin
    - dev.hilla
    - de.paladinsinn.tp.dcis.ui

