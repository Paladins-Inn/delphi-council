<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2022. Roland T. Lichti
  ~
  ~ This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.paladins-inn.torganized</groupId>
  <artifactId>torganized-play</artifactId>
  <packaging>pom</packaging>
  <version>2.0.0</version>

  <name>PI :: Torganized Play :: Root</name>

  <modules>
    <module>delphi-council-core</module>
    <module>delphi-council-client</module>
    <module>delphi-council-service</module>
    <module>delphi-council-webui</module>
  </modules>


  <properties>
    <skipTests>false</skipTests>
    <skip.jar>false</skip.jar>
    <skip.javadoc>false</skip.javadoc>
    <skip.source>false</skip.source>
    <skip.site>false</skip.site>
    <skipITs>true</skipITs>

    <delombok.output>${project.build.directory}/delombok</delombok.output>

    <war.output.directory>undefined</war.output.directory>

    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.release>17</maven.compiler.release>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>

    <file.encoding>UTF-8</file.encoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>2.15.2.Final</quarkus.platform.version>

    <compiler-plugin.version>3.10.1</compiler-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>3.0.0-M7</maven-failsafe-plugin.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
    <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
    <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-checkstyle-plugin.version>3.2.0</maven-checkstyle-plugin.version>
    <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>
    <jandex-maven-plugin.version>3.0.5</jandex-maven-plugin.version>
  </properties>

  <inceptionYear>2022</inceptionYear>

  <licenses>
    <license>
      <name>GNU GENERAL PUBLIC LICENSE</name>
      <url>https://www.gnu.org/licenses/gpl-3.0.de.html</url>
      <distribution>repo</distribution>
      <comments>
        The GNU General Public License is a free, copyleft license for software and other kinds of works.
      </comments>
    </license>
  </licenses>

  <organization>
    <name>Paladins Inn</name>
    <url>https://www.paladins-inn.de</url>
  </organization>

  <developers>
    <developer>
      <id>klenkes74</id>
      <name>Roland T. Lichti</name>
      <email>rlichti@kaiserpfalz-edv.de</email>
      <url>https://www.lichti.de</url>
      <roles>
        <role>Project Chair</role>
        <role>Developer</role>
      </roles>
      <properties>
        <picUrl>https://secure.gravatar.com/avatar/3b5c4008dc30b266341632f9931aab56</picUrl>
      </properties>

      <organization>Paladins Inn</organization>
      <organizationUrl>https://www.paladins-inn.de</organizationUrl>
      <timezone>Europe/Berlin</timezone>
    </developer>
  </developers>

  <issueManagement>
    <url>https://github.com/Paladins-Inn/torganized-play/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub Packages kp-rpg</name>
      <url>https://maven.pkg.github.com/Paladins-Inn</url>
    </repository>
  </distributionManagement>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>de.kaiserpfalz-edv.commons</groupId>
        <artifactId>kp-commons-bom</artifactId>
        <version>2.2.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>de.kaiserpfalz-edv.rpg</groupId>
        <artifactId>kp-rpg-bom</artifactId>
        <version>1.2.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>


      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>de.paladins-inn.torganized</groupId>
        <artifactId>delphi-council-core</artifactId>
        <version>${project.version}</version>
        <exclusions>
          <exclusion>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-orm</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>de.paladins-inn.torganized</groupId>
        <artifactId>delphi-council-service</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.paladins-inn.torganized</groupId>
        <artifactId>delphi-council-client</artifactId>
        <version>${project.version}</version>
        <exclusions>
          <exclusion>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jdbc-mariadb</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>de.paladins-inn.torganized</groupId>
        <artifactId>delphi-council-webui</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${compiler-plugin.version}</version>
          <configuration>
            <parameters>${maven.compiler.parameters}</parameters>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
          <executions>
            <execution>
              <id>default-testCompile</id>
              <goals>
                <goal>testCompile</goal>
              </goals>
              <phase>test-compile</phase>
              <configuration>
                <skip>${skipTests}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok-maven-plugin</artifactId>
          <version>${lombok-maven-plugin.version}</version>
          <configuration>
            <skip>${skip.javadoc}</skip>
            <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
            <outputDirectory>${delombok.output}</outputDirectory>
            <addOutputDirectory>false</addOutputDirectory>
          </configuration>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals>
                <goal>delombok</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>1.18.24</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <skip>${skip.javadoc}</skip>
            <sourcepath>${delombok.output}</sourcepath>
            <doclint>none</doclint>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <configuration>
            <skipSource>${skip.source}</skipSource>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
            <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>
          </configuration>
          <executions>
            <execution>
              <id>test-sources-generation</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>testResources</goal>
              </goals>
              <configuration>
                <skip>${skipTests}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.3.2</version>
          <configuration>
            <failOnMissingWebXml>false</failOnMissingWebXml>
            <webResources>
              <resource>
                <directory>${war.output.directory}</directory>
              </resource>
            </webResources>
          </configuration>
        </plugin>

        <plugin>
          <groupId>io.smallrye</groupId>
          <artifactId>jandex-maven-plugin</artifactId>
          <version>${jandex-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>io.smallrye</groupId>
              <artifactId>jandex</artifactId>
              <version>3.0.5</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>make-index</id>
              <goals>
                <goal>jandex</goal>
              </goals>
              <phase>process-classes</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
          <configuration>
            <skip>${skip.site}</skip>
          </configuration>
        </plugin>

        <plugin>
          <groupId>${quarkus.platform.group-id}</groupId>
          <artifactId>quarkus-maven-plugin</artifactId>
          <version>${quarkus.platform.version}</version>
          <extensions>true</extensions>
          <executions>
            <execution>
              <goals>
                <goal>build</goal>
                <goal>generate-code</goal>
                <goal>generate-code-tests</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <systemPropertyVariables>
              <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
              <maven.home>${maven.home}</maven.home>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
              <configuration>
                <systemPropertyVariables>
                  <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                  <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                  <maven.home>${maven.home}</maven.home>
                </systemPropertyVariables>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/*.xcf</exclude>
          <exclude>**/*.webp</exclude>
          <exclude>**/*.docx</exclude>
          <exclude>**/*.xlsx</exclude>
          <exclude>**/*.zip</exclude>
          <exclude>**/*.tgz</exclude>
          <exclude>**/*.png</exclude>
          <exclude>**/*.jpg</exclude>
          <exclude>**/*.jpeg</exclude>
          <exclude>**/*.gpg</exclude>
          <exclude>**/*.svg</exclude>
          <exclude>**/*.license</exclude>
          <exclude>**/*.key</exclude>
          <exclude>**/*.crt</exclude>
          <exclude>static/*</exclude>
        </excludes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.xcf</include>
          <include>**/*.webp</include>
          <include>**/*.docx</include>
          <include>**/*.xlsx</include>
          <include>**/*.zip</include>
          <include>**/*.tgz</include>
          <include>**/*.png</include>
          <include>**/*.jpg</include>
          <include>**/*.jpeg</include>
          <include>**/*.gpg</include>
          <include>**/*.svg</include>
          <include>**/*.license</include>
          <include>**/tls.key</include>
          <include>**/tls.crt</include>
          <include>static/*</include>
        </includes>
      </resource>
    </resources>
  </build>

  <profiles>
    <profile>
      <id>java</id>

      <activation>
        <file>
          <exists>src/main/java</exists>
        </file>
      </activation>

      <dependencies>
        <!-- Syntactic Sugar -->
        <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-hibernate-validator</artifactId>
        </dependency>


        <!-- Observability -->
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-logging-json</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkiverse.logging.logback</groupId>
          <artifactId>quarkus-logging-logback</artifactId>
          <version>0.13.0</version>
          <scope>provided</scope>
        </dependency>


        <!-- Quarkus Integration -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-arc</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-config-yaml</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.smallrye</groupId>
          <artifactId>jandex</artifactId>
        </dependency>


        <!-- Caching -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-cache</artifactId>
        </dependency>


        <!-- openapi/swagger -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-swagger-ui</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-openapi</artifactId>
        </dependency>


        <!-- JSon/XML handling -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-jackson</artifactId>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>jackson-datatype-jsr353</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>java-test</id>
      <activation>
        <file>
          <exists>src/test/java</exists>
        </file>
      </activation>

      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-junit5</artifactId>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest</artifactId>
          <version>2.2</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <version>2.19.0</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-slf4j-impl</artifactId>
          <version>2.19.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>org.jboss.slf4j:slf4j-jboss-logmanager
                </classpathDependencyExclude>
              </classpathDependencyExcludes>
              <argLine>-Dorg.jboss.logging.provider=slf4j</argLine>
            </configuration>
          </plugin>

          <!-- Runs the integration tests (*IT) after the server is started -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <classpathDependencyExcludes>
                <classpathDependencyExclude>org.jboss.slf4j:slf4j-jboss-logmanager
                </classpathDependencyExclude>
              </classpathDependencyExcludes>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <!--suppress UnresolvedMavenProperty -->
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
              <trimStackTrace>false</trimStackTrace>
              <enableAssertions>true</enableAssertions>
            </configuration>
          </plugin>
        </plugins>

        <testResources>
          <testResource>
            <filtering>true</filtering>
            <directory>src/test/resources</directory>
            <excludes>
              <exclude>**/*.xcf</exclude>
              <exclude>**/*.docx</exclude>
              <exclude>**/*.xlsx</exclude>
              <exclude>**/*.zip</exclude>
              <exclude>**/*.tgz</exclude>
              <exclude>**/*.png</exclude>
              <exclude>**/*.jpg</exclude>
              <exclude>**/*.gpg</exclude>
              <exclude>**/*.license</exclude>
              <exclude>**/*.key</exclude>
              <exclude>**/*.crt</exclude>
            </excludes>
          </testResource>
          <testResource>
            <filtering>false</filtering>
            <directory>src/test/resources</directory>
            <includes>
              <include>**/*.xcf</include>
              <include>**/*.docx</include>
              <include>**/*.xlsx</include>
              <include>**/*.zip</include>
              <include>**/*.tgz</include>
              <include>**/*.png</include>
              <include>**/*.jpg</include>
              <include>**/*.gpg</include>
              <include>**/*.license</include>
              <include>**/*.key</include>
              <include>**/*.crt</include>
            </includes>
          </testResource>
        </testResources>
      </build>
    </profile>

    <profile>
      <id>jandex</id>
      <activation>
        <file>
          <exists>src/main/resources/META-INF/beans.xml</exists>
        </file>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>io.smallrye</groupId>
            <artifactId>jandex-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>


    <profile>
      <id>quarkus-jpa</id>
      <activation>
        <file>
          <exists>.profile-jpa</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-hibernate-orm</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-hibernate-envers</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-spring-data-jpa-api</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-liquibase</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-jdbc-mariadb</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-test-h2</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>quarkus-security</id>
      <activation>
        <file>
          <exists>.profile-security</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-security</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-oidc</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-jwt</artifactId>
          <scope>provided</scope>
        </dependency>
<!--
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-spring-web</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-spring-security</artifactId>
        </dependency>
-->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-test-security</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>quarkus-rest</id>
      <activation>
        <file>
          <exists>.profile-rest</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-spring-data-rest</artifactId>
        </dependency>

        <!-- Security -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-oidc</artifactId>
        </dependency>


        <!-- REST/Communication -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-resteasy-jackson</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-resteasy-multipart</artifactId>
        </dependency>
        <!-- Resilience pattern -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-fault-tolerance</artifactId>
          <exclusions>
            <exclusion>
              <groupId>io.smallrye</groupId>
              <artifactId>smallrye-metrics-api</artifactId>
            </exclusion>
          </exclusions>
        </dependency>

        <!-- Zalando Problem -->
        <dependency>
          <groupId>com.tietoevry.quarkus</groupId>
          <artifactId>quarkus-resteasy-problem</artifactId>
          <scope>provided</scope>
        </dependency>

        <!-- testing -->
        <dependency>
          <groupId>io.rest-assured</groupId>
          <artifactId>rest-assured</artifactId>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>com.github.tomakehurst</groupId>
          <artifactId>wiremock-jre8</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>



    <profile>
      <id>quarkus-rest-client</id>
      <activation>
        <file>
          <exists>.profile-rest-client</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-rest-client</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-rest-client-jackson</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-rest-client-config</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-fault-tolerance</artifactId>
        </dependency>


        <!-- Security -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-oidc-client</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-oidc-client-filter</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-oidc-token-propagation</artifactId>
        </dependency>


        <!-- testing -->
        <dependency>
          <groupId>com.github.tomakehurst</groupId>
          <artifactId>wiremock-jre8</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>


    <profile>
      <id>quarkus-observability</id>
      <activation>
        <file>
          <exists>.profile-observability</exists>
        </file>
      </activation>

      <dependencies>
        <!-- Logging -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-logging-json</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkiverse.loggingmanager</groupId>
          <artifactId>quarkus-logging-manager</artifactId>
          <version>2.1.4</version>
          <scope>provided</scope>
        </dependency>

        <!-- API / Health -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-openapi</artifactId>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-health</artifactId>
          <scope>provided</scope>
        </dependency>

        <!-- Metrics -->
        <dependency>
          <groupId>io.micrometer</groupId>
          <artifactId>micrometer-registry-prometheus</artifactId>
          <scope>provided</scope>
        </dependency>

        <!-- Tracing -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-opentelemetry</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>quarkus</id>
      <activation>
        <file>
          <exists>src/main/resources/application.yaml</exists>
        </file>
      </activation>

      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-core</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-maven-plugin</artifactId>
            <!--suppress MavenModelInspection -->
            <version>${quarkus.platform.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>build</goal>
                  <goal>generate-code</goal>
                  <goal>generate-code-tests</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <!--suppress UnresolvedMavenProperty -->
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>container-deployment-database</id>

      <activation>
        <file>
          <exists>.profile-container-with-database</exists>
        </file>
      </activation>

      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-hibernate-envers</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-spring-data-jpa-api</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-liquibase</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-jdbc-mariadb</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>container-deployment</id>

      <activation>
        <file>
          <exists>.profile-container-deployment</exists>
        </file>
      </activation>

      <dependencies>
        <!-- Configuration -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-config-yaml</artifactId>
        </dependency>


        <!-- Security -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-oidc</artifactId>
        </dependency>


        <!-- REST handling -->
        <dependency>
          <groupId>com.tietoevry.quarkus</groupId>
          <artifactId>quarkus-resteasy-problem</artifactId>
        </dependency>


        <!-- Logging -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-logging-json</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkiverse.loggingmanager</groupId>
          <artifactId>quarkus-logging-manager</artifactId>
          <version>2.1.4</version>
        </dependency>

        <!-- API Management -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-openapi</artifactId>
        </dependency>


        <!-- Health and Metrics -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
        </dependency>


        <!-- Tracing -->
        <dependency>
          <groupId>io.quarkiverse.opentelemetry.exporter</groupId>
          <artifactId>quarkus-opentelemetry-exporter-jaeger</artifactId>
          <version>1.0.0.Final</version>
        </dependency>
        <dependency>
          <groupId>io.opentracing.contrib</groupId>
          <artifactId>opentracing-jdbc</artifactId>
        </dependency>

        <!-- Build -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-container-image-jib</artifactId>
        </dependency>
      </dependencies>
    </profile>



    <profile>
      <id>helm</id>

      <activation>
        <file>
          <exists>src/main/helm</exists>
        </file>
      </activation>

      <build>
        <resources>
          <resource>
            <filtering>true</filtering>
            <directory>src/main/helm</directory>
            <excludes>
              <exclude>**/*.docx</exclude>
              <exclude>**/*.xlsx</exclude>
              <exclude>**/*.zip</exclude>
              <exclude>**/*.tgz</exclude>
              <exclude>**/*.png</exclude>
              <exclude>**/*.jpg</exclude>
              <exclude>**/*.gpg</exclude>
              <exclude>**/*.license</exclude>
            </excludes>
            <targetPath>../helm</targetPath>
          </resource>
          <resource>
            <filtering>false</filtering>
            <directory>src/main/helm</directory>
            <includes>
              <include>**/*.docx</include>
              <include>**/*.xlsx</include>
              <include>**/*.zip</include>
              <include>**/*.tgz</include>
              <include>**/*.png</include>
              <include>**/*.jpg</include>
              <include>**/*.gpg</include>
              <include>**/*.license</include>
            </includes>
            <targetPath>../helm</targetPath>
          </resource>
        </resources>
      </build>
    </profile>

    <profile>
      <id>release</id>

      <build>
        <plugins>
          <plugin>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <skipITs>false</skipITs>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
  </profiles>
</project>
