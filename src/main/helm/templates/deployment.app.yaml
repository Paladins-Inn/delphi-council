---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: "{{ .Release.Namespace }}"
  name: "{{ .Chart.Name }}-app"
  labels:
    app.kubernetes.io/name: "{{ .Chart.Name }}"
    app.kubernetes.io/component: "app"
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ .Chart.Name }}"
      app.kubernetes.io/part-of: "{{ .Chart.Name }}"
      app.kubernetes.io/component: "app"
  strategy:
    type: RollingUpdate
  template:
    metadata:
      name: "{{ .Chart.Name }}-app"
      labels:
        app.kubernetes.io/name: "{{ .Chart.Name }}"
        app.kubernetes.io/part-of: "{{ .Chart.Name }}"
        app.kubernetes.io/component: "app"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: "{{ .Chart.Name }}-app"
        image: "docker-registry.default.svc:5000/{{ .Release.Namespace }}/delphi-council-webui:{{ .Values.app.image.tag }}"
        imagePullPolicy: "{{ .Values.app.image.pullPolicy }}"
        resources:
        {{- toYaml .Values.app.requests | nindent 10 }}
        envFrom:
          - prefix: OIDC
            secretRef:
              name: "{{ .Chart.Name }}-oidc-app"
        ports:
          - name: https
            containerPort: 8443
            protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /q/health/ready
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 5
